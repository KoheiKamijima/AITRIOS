import Head from "next/head";
import Image from "next/image";
import PolygonRenderer from "@/components/PolygonRenderer";
import ChartRender from "@/components/ChartRender";
import CrowRender from "@/components/CrowRender";
import { useState, useEffect, useRef } from "react";
import useSound from "use-sound";
import React from "react";
import styles from "@/styles/Home.module.css";


export default function Home() {
  const [play, { stop, pause }] = useSound("/warning.mp3");
  const [data, setData] = useState([]);
  const fetchData = async () => {
    const res = await fetch(`/api/data`);
    const newData = await res.json();
    setData(newData);
  };

  useEffect(() => {
    fetchData();
    const intervalId = setInterval(fetchData, process.env.NEXT_PUBLIC_FETCH_INTERVAL);

    return () => {
      clearInterval(intervalId);
    };
  }, []);

  const onSubmit = async () => {

  }



  
       


  const geojson = {
    type: "FeatureCollection",
    features: [
      {
        type: "Feature",
        geometry: {
          type: "Point",
          coordinates: [0.0, 0.0, 0.0],
        },
        properties: {
          device_id: "sid-100A50500A2001008164012000000000",
          type_id: 0,
          class_id: null,
          timestamp: null,
        },
      },
      {
        type: "Feature",
        geometry: {
          type: "Point",
          coordinates: [10.0, 0.0, 0.0],
        },
        properties: {
          device_id: "sid-100A50500A2011085864012000000000",
          type_id: 0,
          class_id: null,
          timestamp: null,
        },
      },
      {
        type: "Feature",
        geometry: {
          type: "Polygon",
          coordinates: [
            [0.0, 0.0],
            [23.293134615353335, 4.991136632108562],
            [18.431666401053945, 9.852604846407955],
            [0.0, 0.0],
          ],
        },
        properties: {
          device_id: "sid-100A50500A2001008164012000000000",
          type_id: 1,
          class_id: 0,
          timestamp: "20230621075334854",
        },
      },
      {
        type: "Feature",
        geometry: {
          type: "Polygon",
          coordinates: [
            [10.0, 0.0],
            [5.008863367891438, 23.293134615353335],
            [0.14739515359204525, 18.431666401053945],
            [10.0, 0.0],
          ],
        },
        properties: {
          device_id: "sid-100A50500A2011085864012000000000",
          type_id: 1,
          class_id: 0,
          timestamp: "20230621075334854",
        },
      },
      {
        type: "Feature",
        geometry: {
          type: "Polygon",
          coordinates: [
            [9.561017548183196, 2.048687122321259],
            [8.972309733141893, 1.9225417498850184],
            [7.777614715214325, 4.157506042548204],
            [8.972309733141891, 4.7961275142855335],
            [9.561017548183196, 2.048687122321259],
          ],
        },
        properties: {
          device_id: null,
          type_id: 2,
          class_id: 0,
          timestamp: "20230621075334854",
        },
      },
    ],
  };

 

  return (
    <>
   
      <Head>
        <title>カラス！</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>Map Search</title>
     <meta charset="utf-8" />
      </Head>
      <nav className={styles.nav}>
      <ul>
        <p>カラスマップ&nbsp;</p>
      </ul>
      </nav>
  
      <CrowRender data_crow={data} />
      <div className={styles.map2}>
      <PolygonRenderer data={data} scale={50} />
      </div>
      <div className={styles.map3}>
      <ChartRender data_crow={data} />
      </div>
      <div className={styles.map2_description}>
          <p>現場の様子</p>
      </div>
      <div className={styles.map3_description}>
          <p>履歴</p>
      </div>
      <div className={styles.button}>
        <p>
        <button type="submit" onClick={onSubmit} style={{ height: "50px", width: "200px" }} >地点１取得</button>
        </p>
        <p>
        <button type="submit" onClick={onSubmit} style={{ height: "50px", width: "200px" }} >地点２取得</button>
        </p>
        <p>
        <button type="submit" onClick={onSubmit} style={{ height: "50px", width: "200px" }} >地点３取得</button>
        </p>
        <p>
        <button type="submit" onClick={onSubmit} style={{ height: "50px", width: "200px" }} >地点４取得</button>
        </p>
      </div>
  
    </>
  );
}
